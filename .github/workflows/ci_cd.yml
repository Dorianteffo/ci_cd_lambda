name: ci_cd

on: 
    pull_request:
        branches: 
          - master

env:
  AWS_ACCESS_KEY_ID: ${{   secrets.AWS_ACCESS_KEY_ID   }}
  AWS_SECRET_ACCESS_KEY: ${{   secrets.AWS_SECRET_ACCESS_KEY  }}
  AUTHORIZATION: ${{  secrets.AUTHORIZATION   }}


jobs: 
    ci_job: 
        runs-on: ubuntu-latest
        steps: 
            - name: checkout repo
              uses: actions/checkout@v2

            - name: Spin up containers
              run: make up

            - name: Run CI test
              run: make ci

            - name: Stop container
              run: make down

    
    deploy_terraform: 
        runs-on: ubuntu-latest
        needs: [ci_job]
        steps: 
            - name: checkout repo 
              uses: actions/checkout@v2

            - name: init terraform 
              run: make infra-init

            - name: apply terraform 
              run: make infra-apply


    push_docker_image: 
        runs-on: ubuntu-latest
        needs: [ci_job]
        steps:
          - name: checkout repo 
            uses: actions/checkout@v2

          - name: Configure AWS credentials
            uses: aws-actions/configure-aws-credentials@v4 
            with:
              aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
              aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
              aws-region: eu-west-3 

          - name: Login to Amazon ECR
            id: login-ecr
            uses: aws-actions/amazon-ecr-login@v2

          - name: Build, tag, and push docker image to Amazon ECR
            env:
              REGISTRY: ${{ steps.login-ecr.outputs.registry }}
              REPOSITORY: ecr-repo-lambda
              IMAGE_TAG: ${{ github.sha }}
            run: |
                cd extract_api_data
                docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
                docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
                aws lambda update-function-code \
                    --function-name test-lambda \
                    --image-uri $REGISTRY/$REPOSITORY:$IMAGE_TAG
        


